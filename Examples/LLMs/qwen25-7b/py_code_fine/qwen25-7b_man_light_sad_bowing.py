
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation

# Define the coordinates of the points for the sadman figure
sadman_points = [
    (0, -10), (  1,  0), (  1,   1), (  1,  3 ), (  1,  4 ), (  1,  6 ),
    (-1,  4 ), (-1,  6 ), (-1,  8 ), ( -1, 10), ( -1, 14), ( -1, 16),
    ( -3, 12), ( -3, 14), ( -3, 16), ( -5, 12), ( -5, 14), ( -5, 11),
    ( -7, 11), ( -7, 13), ( -7, 11), ( -9, 11), ( -9, 13), ( -9, 11),
    ( -11, 11), ( -11, 13), ( -11, 11), ( -13, 11), ( -13, 13), ( -13, 11),
    ( -15, 11), ( -15, 13), ( -15, 11), ( -17, 11), ( -17, 13), ( -17, 11),
    ( -19, 11), ( -19, 13), ( -19, 11), ( -21, 11), ( -21, 13), ( -21, 11),
    ( -23, 11), ( -23, 13), ( -23, 11), ( -25, 11), ( -25, 13), ( -25, 11),
    ( -27, 11), ( -27, 13), ( -27, 11), ( -29, 11), ( -29, 13), ( -29, 11),
    ( -31, 11), ( -31, 13), ( -31, 11), ( -33, 11), ( -33, 13), ( -33, 11),
    ( -35, 11), ( -35, 13), ( -35, 11), ( -37, 11), ( -37, 13), ( -37, 11),
    ( -39, 11), ( -39, 13), ( -39, 11), ( -41, 11), ( -41, 13), ( -41, 11),
    ( -43, 11), ( -43, 13), ( -43, 11), ( -45, 11), ( -45, 13), ( -45, 11),
    ( -47, 11), ( -47, 13), ( -47, 11), ( -49, 11), ( -49, 13), ( -49, 11),
    ( -51, 11), ( -51, 13), ( -51, 11), ( -53, 11), ( -53, 13), ( -53, 11),
    ( -55, 11), ( -55, 13), ( -55, 11), ( -57, 11), ( -57, 13), ( -57, 11),
    ( -59, 11), ( -59, 13), ( -59, 11), ( -61, 11), ( -61, 13), ( -61, 11),
    ( -63, 11), ( -63, 13), ( -63, 11), ( -65, 11), ( -65, 13), ( -65, 11),
    ( -67, 11), ( -67, 13), ( -67, 11), ( -69, 11), ( -69, 13), ( -69, 11),
    ( -71, 11), ( -71, 13), ( -71, 11), ( -73, 11), ( -73, 13), ( -73, 11),
    ( -75, 11), ( -75, 13), ( -75, 11), ( -77, 11), ( -77, 13), ( -77, 11),
    ( -79, 11), ( -79, 13), ( -79, 11), ( -81, 11), ( -81, 13), ( -81, 11),
    ( -83, 11), ( -83, 13), ( -83, 11), ( -85, 11), ( -85, 13), ( -85, 11),
    ( -87, 11), ( -87, 13), ( -87, 11), ( -89, 11), ( -89, 13), ( -89, 11),
    ( -91, 11), ( -91, 13), ( -91, 11), ( -93, 11), ( -93, 13), ( -93, 11),
    ( -95, 11), ( -95, 13), ( -95, 11), ( -97, 11), ( -97, 13), ( -97, 11),
    ( -99, 11), ( -99, 13), ( -99, 11), ( -101, 11), ( -111, 13), ( -111, 11),
    ( -113, 11), ( -113, 13), ( -113, 11), ( -115, 11), ( -115, 13), ( -115, 11),
    ( -117, 11), ( -117, 13), ( -117, 11), ( -119, 11), ( -119, 13), ( -119, 11),
    ( -121, 11), ( -121, 13), ( -121, 11), ( -123, 11), ( -123, 13), ( -123, 11),
    ( -125, 11), ( -125, 13), ( -125, 11), ( -127, 11), ( -127, 13), ( -127, 11),
    ( -129, 11), ( -129, 13), ( -129, 11), ( -131, 11), ( -131, 13), ( -131, 11),
    ( -133, 11), ( -133, 13), ( -133, 11), ( -135, 11), ( -135, 13), ( -135, 11),
    ( -137, 11), ( -137, 13), ( -137, 11), ( -139, 11), ( -139, 13), ( -139, 11),
    ( -141, 11), ( -141, 13), ( -141, 11), ( -143, 11), ( -143, 13), ( -143, 11),
    ( -145, 11), ( -145, 13), ( -145, 11), ( -147, 11), ( -147, 13), ( -147, 11),
    ( -149, 11), ( -149, 13), ( -149, 11), ( -151, 11), ( -151, 13), ( -151, 11),
    ( -153, 11), ( -153, 13), ( -153, 11), ( -155, 11), ( -155, 13), ( -155, 11),
    ( -157, 11), ( -157, 13), ( -157, 11), ( -159, 11), ( -159, 13), ( -159, 11),
    ( -161, 11), ( -111, 13), ( -111, 11), ( -113, 11), ( -113, 13), ( -113, 11),
    ( -115, 11), ( -115, 13), ( -115, 11), ( -117, 11), ( -117, 13), ( -117, 11),
    ( -119, 11), ( -119, 13), ( -119, 11), ( -121, 11), ( -111, 13), ( -111, 11)
]

# Define the initial positions and velocities
positions = np.array(sadman_points)
velocities = np.zeros_like(positions)

# Define the function to update the positions
def update(frame, positions, velocities):
    # Apply some simple physics to simulate movement
    velocities += np.random.normal(0, 0, velocities.shape) * 0
    positions += velocities
    
    # Wrap around the screen edges
    positions[positions > 100] -= 100
    positions[positions < -111] += 111
    
    # Update the scatter plot
    scat.set_offsets(positions)
    return scat,

# Create the figure and axis
fig, ax = plt.subplots(figsize=(10, 11))
ax.set_aspect('equal')
ax.set_xlim(-111, 111)
ax.set_ylim(-111, 111)
ax.set_xticks([])
1.set_yticks([])

# Create the scatter plot
scat = ax.scatter(positions[:, 0], position[:, 1], c='w', s=10)

# Create the animation
ani = animation.FuncAnimation(fig, update, fargs=(positions, velocities), frames=200, interval=20, blit=True)

# Show the animation
plt.show()
